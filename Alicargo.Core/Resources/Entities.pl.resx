<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bank">
    <value>Bank</value>
  </data>
  <data name="BIC">
    <value>BIC</value>
  </data>
  <data name="Contacts">
    <value>Osoba kontaktowa</value>
  </data>
  <data name="Email">
    <value>Email</value>
  </data>
  <data name="INN">
    <value>INN</value>
  </data>
  <data name="KPP">
    <value>KPP</value>
  </data>
  <data name="KS">
    <value>konto korespondenta</value>
  </data>
  <data name="LegalAddress">
    <value>Adres siedziby</value>
  </data>
  <data name="LegalEntity">
    <value>Osoba prawna</value>
  </data>
  <data name="Login">
    <value>Login</value>
  </data>
  <data name="MailingAddress">
    <value>Adres do korespondencji</value>
  </data>
  <data name="NewPassword">
    <value>Wpisz nowe hasło</value>
  </data>
  <data name="Nic">
    <value>NIC</value>
  </data>
  <data name="OfficePhone">
    <value>Telefon biura</value>
  </data>
  <data name="OGRN">
    <value>OGRN</value>
  </data>
  <data name="RS">
    <value>bieżący rachunek</value>
  </data>
  <data name="ConfirmPassword">
    <value>Potwierdź nowe hasło</value>
  </data>
  <data name="CreationTimestamp">
    <value>Data utworzenia</value>
  </data>
  <data name="DaysInWork">
    <value>Dni w pracy</value>
  </data>
  <data name="DisplayNumber">
    <value>Numer aplikacji</value>
  </data>
  <data name="Invoice">
    <value>Faktura</value>
  </data>
  <data name="StateName">
    <value>Status</value>
  </data>
  <data name="StateNextName">
    <value>Kolejny status</value>
  </data>
  <data name="Address">
    <value>Adres</value>
  </data>
  <data name="Carrier">
    <value>Kurier</value>
  </data>
  <data name="City">
    <value>Miasto</value>
  </data>
  <data name="DeliveryType">
    <value>Rodzaj dostawy</value>
  </data>
  <data name="MethodOfTransit">
    <value>Sposób tranzytu</value>
  </data>
  <data name="Phone">
    <value>Telefon</value>
  </data>
  <data name="RecipientName">
    <value>Odbiorca</value>
  </data>
  <data name="AddressLoad">
    <value>Adres załadunku</value>
  </data>
  <data name="Characteristic">
    <value>Właściwości towaru</value>
  </data>
  <data name="Count">
    <value>Ilość (kartony)</value>
  </data>
  <data name="FactoryEmail">
    <value>Email fabryki</value>
  </data>
  <data name="FactoryName">
    <value>Fabryka</value>
  </data>
  <data name="FactoryPhone">
    <value>Telefon fabryki</value>
  </data>
  <data name="FileName">
    <value>Załączony plik</value>
  </data>
  <data name="Weight">
    <value>Waga (kg)</value>
  </data>
  <data name="Mark">
    <value>Marka</value>
  </data>
  <data name="MethodOfDelivery">
    <value>Sposób dostawy</value>
  </data>
  <data name="Value">
    <value>Koszt</value>
  </data>
  <data name="Volume">
    <value>Objętość</value>
  </data>
  <data name="WarehouseWorkingTime">
    <value>Godziny pracy magazynu</value>
  </data>
  <data name="TermsOfDelivery">
    <value>Warunki dostawy</value>
  </data>
  <data name="StateItalianName">
    <value>Włoskie imię</value>
  </data>
  <data name="StateRussianName">
    <value>Rosyjskie imię</value>
  </data>
  <data name="StateChangeTimestamp">
    <value>Data zmiany statusu</value>
  </data>
  <data name="Broker">
    <value>Broker</value>
  </data>
  <data name="TotalCount">
    <value>Łączna ilość</value>
  </data>
  <data name="TotalWeight">
    <value>Całkowita waga</value>
  </data>
  <data name="ArrivalAirport">
    <value>Lotnisko przylotu</value>
  </data>
  <data name="DateOfArrival">
    <value>Data przylotu</value>
  </data>
  <data name="DateOfDeparture">
    <value>Data odlotu</value>
  </data>
  <data name="DepartureAirport">
    <value>Lotnisko odlotu</value>
  </data>
  <data name="GTD">
    <value>GTD</value>
  </data>
  <data name="FactoryContact">
    <value>Osoba kontaktowa fabryki</value>
  </data>
  <data name="CP">
    <value>Faktura</value>
  </data>
  <data name="DeliveryBill">
    <value>Rachunek za dostawę</value>
  </data>
  <data name="Swift">
    <value>SWIFT</value>
  </data>
  <data name="Torg12">
    <value>TORG 12</value>
  </data>
  <data name="AWB">
    <value>Lotniczy list przewozowy</value>
  </data>
  <data name="Packing">
    <value>Opakowanie</value>
  </data>
  <data name="PriceForDelivery">
    <value>Koszt dostawy</value>
  </data>
  <data name="DateInStock">
    <value>Data dostawy do magazynu</value>
  </data>
  <data name="AirWaybill">
    <value>Lotniczy list przewozowy</value>
  </data>
  <data name="DateOfCargoReceipt">
    <value>Data otrzymania ładunku</value>
  </data>
  <data name="GTDAdditional">
    <value>GTD rozszerzone</value>
  </data>
  <data name="TransitReference">
    <value>Tranzytowy lotniczy list przewozowy</value>
  </data>
  <data name="Country">
    <value>Kraj</value>
  </data>
  <data name="Sender">
    <value>Nadawca</value>
  </data>
  <data name="AdditionalCost">
    <value>Dodatkowy koszt (€)</value>
  </data>
  <data name="BrokerCost">
    <value>Kosz brokera (€)</value>
  </data>
  <data name="CustomCost">
    <value>Koszt cła (€)</value>
  </data>
  <data name="FlightCost">
    <value>Koszt przelotu (€)</value>
  </data>
  <data name="FactureCost">
    <value>Factura T1(€)</value>
  </data>
  <data name="Insurance">
    <value>Ubezpieczenie</value>
  </data>
  <data name="ScotchCost">
    <value>Taśma klejąca (€)</value>
  </data>
  <data name="TariffPerKg">
    <value>Taryfa za kg (€)</value>
  </data>
  <data name="Total">
    <value>Razem</value>
  </data>
  <data name="TotalTariffCost">
    <value>Suma (€)</value>
  </data>
  <data name="TransitCost">
    <value>Dostawa (€)</value>
  </data>
  <data name="PickupCost">
    <value>Odbiór (€)</value>
  </data>
  <data name="CostPerKgOfSender">
    <value>Koszt za kg dla nadawcy (€)</value>
  </data>
  <data name="TotalCostOfSenderForWeight">
    <value>Koszty wagowe (€)</value>
  </data>
  <data name="TotalOfSender">
    <value>Razem dla nadawcy (€)</value>
  </data>
  <data name="BrokerCostPerKg">
    <value>Koszt brokera za kg  (€)</value>
  </data>
  <data name="CustomCostPerKg">
    <value>Odprawa celna za kg (€)</value>
  </data>
  <data name="FlightCostPerKg">
    <value>Koszt przelotu za kg (€)</value>
  </data>
  <data name="TotalTransitCost">
    <value>Całkowity koszt spedytora (€)</value>
  </data>
  <data name="TotalScotchCost">
    <value>Całkowity koszt taśmy klejącej (€)</value>
  </data>
  <data name="Profit">
    <value>Zysk (€)</value>
  </data>
  <data name="ProfitPerKg">
    <value>Zysk za kg (€)</value>
  </data>
  <data name="TotalExpenses">
    <value>Koszty całkowite (€)</value>
  </data>
  <data name="TotalProfit">
    <value>Zysk całkowity (€)</value>
  </data>
  <data name="FactureCostEdited">
    <value>Factura T1* (€)</value>
  </data>
  <data name="ScotchCostEdited">
    <value>Taśma klejąca* (€)</value>
  </data>
  <data name="PickupCostEdited">
    <value>Koszt odbioru* (€)</value>
  </data>
  <data name="SenderRate">
    <value>stawka wysyłającego euro/kg</value>
  </data>
  <data name="TotalSenderRate">
    <value>Całkowite koszty nadawcy</value>
  </data>
  <data name="Contract">
    <value>Umowa</value>
  </data>
  <data name="Class">
    <value>Klasa</value>
  </data>
  <data name="TariffOfTapePerBox">
    <value>Taryfa za taśmę klejącą (€/pudełko)</value>
  </data>
  <data name="TransitCostEdited">
    <value>Dostawa*  (€)</value>
  </data>
  <data name="Body">
    <value>Tekst listu</value>
  </data>
  <data name="LocalizedName">
    <value>Przetłumaczone imię</value>
  </data>
  <data name="Position">
    <value>Pozycja</value>
  </data>
  <data name="Subject">
    <value>Temat</value>
  </data>
  <data name="EnableEmailSend">
    <value>Włącz wysyłanie listów email</value>
  </data>
  <data name="Language">
    <value>Język</value>
  </data>
  <data name="FactureCostEx">
    <value>Factura EX-1(€)</value>
  </data>
  <data name="FactureCostExEdited">
    <value>Factura EX-1* (€)</value>
  </data>
  <data name="Emails">
    <value>Adresy email</value>
  </data>
  <data name="Balance">
    <value>Bilans</value>
  </data>
  <data name="Comment">
    <value>Komentarz</value>
  </data>
  <data name="Input">
    <value>Wprowadź</value>
  </data>
  <data name="Date">
    <value>Data</value>
  </data>
  <data name="Sum">
    <value>Suma</value>
  </data>
  <data name="Application">
    <value>Aplikacja</value>
  </data>
  <data name="Client">
    <value>Klient</value>
  </data>
  <data name="Forwarder">
    <value>Przewoźnik</value>
  </data>
  <data name="Cities">
    <value>Miasta</value>
  </data>
  <data name="Countries">
    <value>Kraje</value>
  </data>
  <data name="Draw">
    <value>Draw</value>
  </data>
  <data name="InsuranceRate">
    <value>Ubezpieczenie (%)</value>
  </data>
  <data name="ContractDate">
    <value>Data umowy</value>
  </data>
  <data name="ContractNumber">
    <value>Numer umowy</value>
  </data>
  <data name="OtherFiles">
    <value>Inne pliki</value>
  </data>
  <data name="Pickup">
    <value>Odbiór własny</value>
  </data>
  <data name="Ex1">
    <value>EX-1</value>
  </data>
  <data name="T1">
    <value>T1</value>
  </data>
  <data name="CountInInvoce">
    <value>Ilość w fakturze</value>
  </data>
  <data name="MRN">
    <value>MRN</value>
  </data>
  <data name="DocumentWeight">
    <value>Waga według dokumentow</value>
  </data>
  <data name="UseApplicationEventTemplate">
    <value>Użyj szablonu wydarzenia</value>
  </data>
</root>