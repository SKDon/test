@using Alicargo.Core.Resources
@using Alicargo.MvcHelpers.Extensions
@using Resources
@inherits BaseWebViewPage<ApplicationAdminModel>

<div class="row">
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.FactoryName)
		@Html.EditorWithLabelFor(model => model.MarkName)
		@Html.EditorWithLabelFor(model => model.Invoice)
		@Html.EditorWithLabelFor(model => model.Weight)
		@Html.EditorWithLabelFor(model => model.Count)


	</div>
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.FactoryContact)
		@Html.EditorWithLabelFor(model => model.Characteristic)
		@Html.EditorWithLabelFor(model => model.AddressLoad)
		@Html.EditorWithLabelFor(model => model.TermsOfDelivery)
		@Html.LabelFor(model => model.MethodOfDelivery)
		@Html.DropDownListForEnum(model => model.MethodOfDelivery)

	</div>
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.FactoryEmail)
		@Html.EditorWithLabelFor(model => model.FactoryPhone)
		@Html.LabelFor(x => x.CountryId)
		@Html.DropDownListFor(x => x.CountryId, (IDictionary<long, string>)ViewBag.Countries)
		@Html.EditorWithLabelFor(model => model.WarehouseWorkingTime)
		@Html.EditorWithLabelFor(model => model.Currency)

	</div>
</div>
<div class="row">
	<div class="span4">
		<label for="@Html.IdFor(x => x.Volume)">@Entities.Volume (m<span class="super">3</span>&nbsp;)</label>
		@Html.EditorFor(model => model.Volume)
	</div>
	<div class="span4">
		@Html.LabelFor(x => x.SenderId)
		@Html.DropDownListFor(x => x.SenderId, (IDictionary<long, string>)ViewBag.Senders, "")
	</div>
	<div class="span2">
		@Html.EditorWithLabelFor(model => model.ScotchCostEdited)
	</div>
	<div class="span2">
		@Html.EditorWithLabelFor(model => model.TariffPerKg)
	</div>
</div>
<div class="row">
	<div class="span2">
		@Html.EditorWithLabelFor(model => model.FactureCost)
	</div>
	<div class="span2">
		@Html.EditorWithLabelFor(model => model.FactureCostEdited)
	</div>
	<div class="span2">
		@Html.EditorWithLabelFor(model => model.TransitCost)
	</div>
	<div class="span2">
		@Html.EditorWithLabelFor(model => model.TransitCostEdited)
	</div>
	<div class="span2">
		@Html.EditorWithLabelFor(model => model.PickupCost)
	</div>
	<div class="span2">
		@Html.EditorWithLabelFor(model => model.PickupCostEdited)
	</div>
</div>
<hr />
<h4>
	@Pages.Files
</h4>
<div class="row">
	<div class="span4">
		@Html.LabelFor(model => model.Torg12File)
		@Helpers.FileUploader(Html.IdFor(x => x.Torg12File).ToHtmlString(), Model == null
			? null
			: Model.Torg12FileName)
		@Html.LabelFor(model => model.InvoiceFile)
		@Helpers.FileUploader(Html.IdFor(x => x.InvoiceFile).ToHtmlString(), Model == null
			? null
			: Model.InvoiceFileName)
	</div>
	<div class="span4">
		@Html.LabelFor(model => model.CPFile)
		@Helpers.FileUploader(Html.IdFor(x => x.CPFile).ToHtmlString(), Model == null
			? null
			: Model.CPFileName)
		@Html.LabelFor(model => model.SwiftFile)
		@Helpers.FileUploader(Html.IdFor(x => x.SwiftFile).ToHtmlString(), Model == null
			? null
			: Model.SwiftFileName)
	</div>
	<div class="span4">
		@Html.LabelFor(model => model.DeliveryBillFile)
		@Helpers.FileUploader(Html.IdFor(x => x.DeliveryBillFile).ToHtmlString(), Model == null
			? null
			: Model.DeliveryBillFileName)
		@Html.LabelFor(model => model.PackingFile)
		@Helpers.FileUploader(Html.IdFor(x => x.PackingFile).ToHtmlString(), Model == null
			? null
			: Model.PackingFileName)
	</div>
</div>
<div>
	<hr />
	<h4>
		@Pages.Transit
	</h4>
	@{
		var applicationId = (long?)ViewBag.ApplicationId;
		@(applicationId.HasValue
		  ? Html.Action(MVC.Transit.EditByApplication(applicationId))
		  : Html.Action(MVC.Transit.EditByClient((long)ViewBag.ClientId)))
	}
</div>