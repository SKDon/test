@using System.Globalization
@using Alicargo.Core.Localization
@inherits BaseWebViewPage<ApplicationEditModel>

@if (Model.Id != 0)
{
	@Html.HiddenFor(x => x.StateId)
	@Html.HiddenFor(x => x.AirWaybillId)
	@Html.HiddenFor(x => x.TransitId)
	@Html.HiddenFor(x => x.DateInStock)
	@Html.HiddenFor(x => x.DateOfCargoReceipt)
	@Html.HiddenFor(x => x.TransitReference)
	@Html.HiddenFor(x => x.Transit.Id)
}

@helper SelectCountry()
{
	@Html.LabelFor(x => x.CountryId)
	var countries = (IDictionary<long, string>)ViewBag.Countries;
	var list = countries.Select(x => new SelectListItem
	{
		Text = x.Value,
		Value = x.Key.ToString(CultureInfo.InvariantCulture)
	}).ToList();
	@Html.DropDownListFor(x => x.CountryId, list)
}

<div class="row">
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.FactoryName)
		@Html.EditorWithLabelFor(model => model.MarkName)
	</div>
	<div class="span4">
		@Html.LabelFor(model => model.FactoryContact)
		<div>
			@Html.TextAreaFor(model => model.FactoryContact)
		</div>
	</div>
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.FactoryEmail)
		@Html.EditorWithLabelFor(model => model.FactoryPhone)
	</div>
</div>
<div class="row">
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.Invoice)
	</div>
	<div class="span8">
		@Html.EditorWithLabelFor(model => model.Characteristic)
	</div>
</div>
<div class="row">
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.Weigth)
	</div>
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.AddressLoad)
	</div>
	<div class="span4">
		@SelectCountry()
	</div>
</div>
<div class="row">
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.Count)
		<label for="@Html.IdFor(x => x.Volume)">@Resources.Entities.Volume (m<span class="super">3</span> )</label>
		@Html.EditorFor(model => model.Volume)
	</div>
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.TermsOfDelivery)
		@Html.LabelFor(model => model.MethodOfDeliveryId)
		@Html.DropDownListFor(model => model.MethodOfDeliveryId,
							  LocalizeEnumExtension.Select((MethodOfDelivery item, string name) => new SelectListItem
							  {
								  Text = name,
								  Value = ((int)item).ToString(CultureInfo.InvariantCulture)
							  }))
	</div>
	<div class="span4">
		@Html.EditorWithLabelFor(model => model.WarehouseWorkingTime)
		@Html.EditorWithLabelFor(model => model.Currency)
	</div>
</div>
<hr />
<h4>
	@Resources.Pages.Files
</h4>
<div class="row">
	<div class="span4">
		@Html.LabelFor(model => model.Torg12File)
		@Helpers.FileUploader(Html.IdFor(x => x.Torg12File).ToHtmlString(), Model.Torg12FileName)
	</div>
	<div class="span4">
		@Html.LabelFor(model => model.CPFile)
		@Helpers.FileUploader(Html.IdFor(x => x.CPFile).ToHtmlString(), Model.CPFileName)
	</div>
	<div class="span4">
		@Html.LabelFor(model => model.DeliveryBillFile)
		@Helpers.FileUploader(Html.IdFor(x => x.DeliveryBillFile).ToHtmlString(), Model.DeliveryBillFileName)
	</div>
</div>
<div class="row">
	<div class="span4">
		@Html.LabelFor(model => model.InvoiceFile)
		@Helpers.FileUploader(Html.IdFor(x => x.InvoiceFile).ToHtmlString(), Model.InvoiceFileName)
	</div>
	<div class="span4">
		@Html.LabelFor(model => model.SwiftFile)
		@Helpers.FileUploader(Html.IdFor(x => x.SwiftFile).ToHtmlString(), Model.SwiftFileName)
	</div>
	<div class="span4">
		@Html.LabelFor(model => model.PackingFile)
		@Helpers.FileUploader(Html.IdFor(x => x.PackingFile).ToHtmlString(), Model.PackingFileName)
	</div>
</div>
<div>
	<hr />
	<h4>
		@Resources.Pages.Transit
	</h4>
	@Html.EditorFor(x => x.Transit)
</div>

