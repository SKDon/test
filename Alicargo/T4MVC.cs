// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    static readonly ForwarderClass s_Forwarder = new ForwarderClass();
    public static ForwarderClass Forwarder { get { return s_Forwarder; } }
    public static Alicargo.Controllers.Application.ApplicationController Application = new Alicargo.Controllers.Application.T4MVC_ApplicationController();
    public static Alicargo.Controllers.Application.ApplicationFilesController ApplicationFiles = new Alicargo.Controllers.Application.T4MVC_ApplicationFilesController();
    public static Alicargo.Controllers.Application.ApplicationListController ApplicationList = new Alicargo.Controllers.Application.T4MVC_ApplicationListController();
    public static Alicargo.Controllers.Application.ApplicationPrintController ApplicationPrint = new Alicargo.Controllers.Application.T4MVC_ApplicationPrintController();
    public static Alicargo.Controllers.Application.ApplicationUpdateController ApplicationUpdate = new Alicargo.Controllers.Application.T4MVC_ApplicationUpdateController();
    public static Alicargo.Controllers.Application.ClientApplicationController ClientApplication = new Alicargo.Controllers.Application.T4MVC_ClientApplicationController();
    public static Alicargo.Controllers.Application.SenderApplicationController SenderApplication = new Alicargo.Controllers.Application.T4MVC_SenderApplicationController();
    public static Alicargo.Controllers.Awb.AdminAwbController AdminAwb = new Alicargo.Controllers.Awb.T4MVC_AdminAwbController();
    public static Alicargo.Controllers.Awb.AirWaybillController AirWaybill = new Alicargo.Controllers.Awb.T4MVC_AirWaybillController();
    public static Alicargo.Controllers.Awb.AwbFilesController AwbFiles = new Alicargo.Controllers.Awb.T4MVC_AwbFilesController();
    public static Alicargo.Controllers.Awb.BrokerAwbController BrokerAwb = new Alicargo.Controllers.Awb.T4MVC_BrokerAwbController();
    public static Alicargo.Controllers.Awb.SenderAwbController SenderAwb = new Alicargo.Controllers.Awb.T4MVC_SenderAwbController();
    public static Alicargo.Controllers.Calculation.BalanceController Balance = new Alicargo.Controllers.Calculation.T4MVC_BalanceController();
    public static Alicargo.Controllers.Calculation.CalculationController Calculation = new Alicargo.Controllers.Calculation.T4MVC_CalculationController();
    public static Alicargo.Controllers.Calculation.ClientCalculationController ClientCalculation = new Alicargo.Controllers.Calculation.T4MVC_ClientCalculationController();
    public static Alicargo.Controllers.Calculation.RegistryOfPaymentsController RegistryOfPayments = new Alicargo.Controllers.Calculation.T4MVC_RegistryOfPaymentsController();
    public static Alicargo.Controllers.Calculation.SenderCalculationController SenderCalculation = new Alicargo.Controllers.Calculation.T4MVC_SenderCalculationController();
    public static Alicargo.Controllers.ChatController Chat = new Alicargo.Controllers.T4MVC_ChatController();
    public static Alicargo.Controllers.CityController City = new Alicargo.Controllers.T4MVC_CityController();
    public static Alicargo.Controllers.CountryController Country = new Alicargo.Controllers.T4MVC_CountryController();
    public static Alicargo.Controllers.DynamicScriptController DynamicScript = new Alicargo.Controllers.T4MVC_DynamicScriptController();
    public static Alicargo.Controllers.EmailTemplateController EmailTemplate = new Alicargo.Controllers.T4MVC_EmailTemplateController();
    public static Alicargo.Controllers.ExcelController Excel = new Alicargo.Controllers.T4MVC_ExcelController();
    public static Alicargo.Controllers.HomeController Home = new Alicargo.Controllers.T4MVC_HomeController();
    public static Alicargo.Controllers.TransitController Transit = new Alicargo.Controllers.T4MVC_TransitController();
    public static Alicargo.Controllers.User.AuthenticationController Authentication = new Alicargo.Controllers.User.T4MVC_AuthenticationController();
    public static Alicargo.Controllers.User.CarrierController Carrier = new Alicargo.Controllers.User.T4MVC_CarrierController();
    public static Alicargo.Controllers.User.ClientController Client = new Alicargo.Controllers.User.T4MVC_ClientController();
    public static Alicargo.Controllers.User.ForwarderUserController ForwarderUser = new Alicargo.Controllers.User.T4MVC_ForwarderUserController();
    public static Alicargo.Controllers.User.RestorePasswordController RestorePassword = new Alicargo.Controllers.User.T4MVC_RestorePasswordController();
    public static Alicargo.Controllers.User.SenderController Sender = new Alicargo.Controllers.User.T4MVC_SenderController();
    public static Alicargo.Controllers.User.UserController User = new Alicargo.Controllers.User.T4MVC_UserController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public Alicargo.Areas.Admin.Controllers.BillController Bill = new Alicargo.Areas.Admin.Controllers.T4MVC_BillController();
        public Alicargo.Areas.Admin.Controllers.BillSettingsController BillSettings = new Alicargo.Areas.Admin.Controllers.T4MVC_BillSettingsController();
        public Alicargo.Areas.Admin.Controllers.StateController State = new Alicargo.Areas.Admin.Controllers.T4MVC_StateController();
        public Alicargo.Areas.Admin.Controllers.StateSettingsController StateSettings = new Alicargo.Areas.Admin.Controllers.T4MVC_StateSettingsController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ForwarderClass
    {
        public readonly string Name = "Forwarder";
        public Alicargo.Areas.Forwarder.Controllers.ApplicationsController Applications = new Alicargo.Areas.Forwarder.Controllers.T4MVC_ApplicationsController();
        public T4MVC.Forwarder.SharedController Shared = new T4MVC.Forwarder.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_HttpStatusCodeResult : System.Web.Mvc.HttpStatusCodeResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_HttpStatusCodeResult(string area, string controller, string action, string protocol = null): base(default(int))
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_FileResult : System.Web.Mvc.FileResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_FileResult(string area, string controller, string action, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    protected override void WriteFile(System.Web.HttpResponseBase response) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_RedirectResult : System.Web.Mvc.RedirectResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_RedirectResult(string area, string controller, string action, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_RedirectToRouteResult : System.Web.Mvc.RedirectToRouteResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_RedirectToRouteResult(string area, string controller, string action, string protocol = null): base(default(System.Web.Routing.RouteValueDictionary))
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class app {
            private const string URLPATH = "~/Scripts/app";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class AirWaybill {
                private const string URLPATH = "~/Scripts/app/AirWaybill";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Columns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Columns.min.js") ? Url("Columns.min.js") : Url("Columns.js");
                public static readonly string Files_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Files.min.js") ? Url("Files.min.js") : Url("Files.js");
                public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
            }
        
            public static readonly string Alicargo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Alicargo.min.js") ? Url("Alicargo.min.js") : Url("Alicargo.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Application {
                private const string URLPATH = "~/Scripts/app/Application";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Columns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Columns.min.js") ? Url("Columns.min.js") : Url("Columns.js");
                public static readonly string Files_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Files.min.js") ? Url("Files.min.js") : Url("Files.js");
                public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Calculation {
                private const string URLPATH = "~/Scripts/app/Calculation";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Admin {
                    private const string URLPATH = "~/Scripts/app/Calculation/Admin";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string Bill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Bill.min.js") ? Url("Bill.min.js") : Url("Bill.js");
                    public static readonly string Columns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Columns.min.js") ? Url("Columns.min.js") : Url("Columns.js");
                    public static readonly string DataSource_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/DataSource.min.js") ? Url("DataSource.min.js") : Url("DataSource.js");
                    public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
                    public static readonly string RegistryOfPaymentsGrid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RegistryOfPaymentsGrid.min.js") ? Url("RegistryOfPaymentsGrid.min.js") : Url("RegistryOfPaymentsGrid.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Client {
                    private const string URLPATH = "~/Scripts/app/Calculation/Client";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string Columns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Columns.min.js") ? Url("Columns.min.js") : Url("Columns.js");
                    public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Sender {
                    private const string URLPATH = "~/Scripts/app/Calculation/Sender";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string Columns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Columns.min.js") ? Url("Columns.min.js") : Url("Columns.js");
                    public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class City {
                private const string URLPATH = "~/Scripts/app/City";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Client {
                private const string URLPATH = "~/Scripts/app/Client";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
            }
        
            public static readonly string Common_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Common.min.js") ? Url("Common.min.js") : Url("Common.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Country {
                private const string URLPATH = "~/Scripts/app/Country";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
            }
        
            public static readonly string CurrencyType_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CurrencyType.min.js") ? Url("CurrencyType.min.js") : Url("CurrencyType.js");
            public static readonly string Files_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Files.min.js") ? Url("Files.min.js") : Url("Files.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Forwarder {
                private const string URLPATH = "~/Scripts/app/Forwarder";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Application {
                    private const string URLPATH = "~/Scripts/app/Forwarder/Application";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string Columns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Columns.min.js") ? Url("Columns.min.js") : Url("Columns.js");
                    public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
                }
            
            }
        
            public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
            public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
            public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class State {
                private const string URLPATH = "~/Scripts/app/State";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Edit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Edit.min.js") ? Url("Edit.min.js") : Url("Edit.js");
                public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Template {
                private const string URLPATH = "~/Scripts/app/Template";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Edit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Edit.min.js") ? Url("Edit.min.js") : Url("Edit.js");
                public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class User {
                private const string URLPATH = "~/Scripts/app/User";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Grid.min.js") ? Url("Grid.min.js") : Url("Grid.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jQuery {
            private const string URLPATH = "~/Scripts/jQuery";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class globalize {
                private const string URLPATH = "~/Scripts/jQuery/globalize";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class cultures {
                    private const string URLPATH = "~/Scripts/jQuery/globalize/cultures";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string globalize_culture_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.it.min.js") ? Url("globalize.culture.it.min.js") : Url("globalize.culture.it.js");
                    public static readonly string globalize_culture_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.pl.min.js") ? Url("globalize.culture.pl.min.js") : Url("globalize.culture.pl.js");
                    public static readonly string globalize_culture_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ru.min.js") ? Url("globalize.culture.ru.min.js") : Url("globalize.culture.ru.js");
                }
            
                public static readonly string globalize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.min.js") ? Url("globalize.min.js") : Url("globalize.js");
            }
        
            public static readonly string jquery_2_1_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.1.intellisense.min.js") ? Url("jquery-2.1.1.intellisense.min.js") : Url("jquery-2.1.1.intellisense.js");
            public static readonly string jquery_2_1_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.1.min.js") ? Url("jquery-2.1.1.min.js") : Url("jquery-2.1.1.js");
            public static readonly string jquery_2_1_1_min_js = Url("jquery-2.1.1.min.js");
            public static readonly string jquery_2_1_1_min_map = Url("jquery-2.1.1.min.map");
            public static readonly string jquery_ui_1_11_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.11.1.min.js") ? Url("jquery-ui-1.11.1.min.js") : Url("jquery-ui-1.11.1.js");
            public static readonly string jquery_ui_min_1_11_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min-1.11.1.min.js") ? Url("jquery-ui.min-1.11.1.min.js") : Url("jquery-ui.min-1.11.1.js");
            public static readonly string jquery_cookie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.cookie.min.js") ? Url("jquery.cookie.min.js") : Url("jquery.cookie.js");
            public static readonly string jquery_signalR_2_1_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.signalR-2.1.2.min.js") ? Url("jquery.signalR-2.1.2.min.js") : Url("jquery.signalR-2.1.2.js");
            public static readonly string jquery_signalR_2_1_2_min_js = Url("jquery.signalR-2.1.2.min.js");
            public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
            public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
            public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
            public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
            public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
            public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
            public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class js {
            private const string URLPATH = "~/Scripts/js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string imagesloaded_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/imagesloaded.min.js") ? Url("imagesloaded.min.js") : Url("imagesloaded.js");
            public static readonly string isotope_min_js = Url("isotope.min.js");
            public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
            public static readonly string map_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/map.min.js") ? Url("map.min.js") : Url("map.js");
            public static readonly string modernizr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr.min.js") ? Url("modernizr.min.js") : Url("modernizr.js");
            public static readonly string pushy_min_js = Url("pushy.min.js");
            public static readonly string script_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/script.min.js") ? Url("script.min.js") : Url("script.js");
            public static readonly string swiper_min_js = Url("swiper.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class kendo {
            private const string URLPATH = "~/Scripts/kendo";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class _2014_1_318 {
                private const string URLPATH = "~/Scripts/kendo/2014.1.318";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class cultures {
                    private const string URLPATH = "~/Scripts/kendo/2014.1.318/cultures";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string kendo_culture_en_min_js = Url("kendo.culture.en.min.js");
                    public static readonly string kendo_culture_it_min_js = Url("kendo.culture.it.min.js");
                    public static readonly string kendo_culture_pl_min_js = Url("kendo.culture.pl.min.js");
                    public static readonly string kendo_culture_ru_min_js = Url("kendo.culture.ru.min.js");
                }
            
                public static readonly string kendo_web_min_js = Url("kendo.web.min.js");
                public static readonly string kendo_web_min_js_map = Url("kendo.web.min.js.map");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class app {
            private const string URLPATH = "~/Content/app";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string avion_png = Url("avion.png");
            public static readonly string bill_settings_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bill-settings.min.css") ? Url("bill-settings.min.css") : Url("bill-settings.css");
                 
            public static readonly string calculation_grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/calculation-grid.min.css") ? Url("calculation-grid.min.css") : Url("calculation-grid.css");
                 
            public static readonly string common_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/common.min.css") ? Url("common.min.css") : Url("common.css");
                 
            public static readonly string kendo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/kendo.min.css") ? Url("kendo.min.css") : Url("kendo.css");
                 
            public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                 
            public static readonly string payment_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/payment.min.css") ? Url("payment.min.css") : Url("payment.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap {
            private const string URLPATH = "~/Content/bootstrap";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/bootstrap/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-responsive.min.css") ? Url("bootstrap-responsive.min.css") : Url("bootstrap-responsive.css");
                     
                public static readonly string bootstrap_responsive_min_css = Url("bootstrap-responsive.min.css");
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                     
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fileupload {
                private const string URLPATH = "~/Content/bootstrap/fileupload";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_fileupload_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-fileupload.min.css") ? Url("bootstrap-fileupload.min.css") : Url("bootstrap-fileupload.css");
                     
                public static readonly string bootstrap_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-fileupload.min.js") ? Url("bootstrap-fileupload.min.js") : Url("bootstrap-fileupload.js");
                public static readonly string bootstrap_fileupload_min_css = Url("bootstrap-fileupload.min.css");
                public static readonly string bootstrap_fileupload_min_js = Url("bootstrap-fileupload.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                private const string URLPATH = "~/Content/bootstrap/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string glyphicons_halflings_white_png = Url("glyphicons-halflings-white.png");
                public static readonly string glyphicons_halflings_png = Url("glyphicons-halflings.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                private const string URLPATH = "~/Content/bootstrap/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string app_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/app.min.css") ? Url("app.min.css") : Url("app.css");
                 
            public static readonly string grabbing_png = Url("grabbing.png");
            public static readonly string pushy_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pushy.min.css") ? Url("pushy.min.css") : Url("pushy.css");
                 
            public static readonly string swiper_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/swiper.min.css") ? Url("swiper.min.css") : Url("swiper.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            private const string URLPATH = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string boblic_eot = Url("boblic.eot");
            public static readonly string boblic_ttf = Url("boblic.ttf");
            public static readonly string boblic_woff = Url("boblic.woff");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string icon_map_png = Url("icon-map.png");
            public static readonly string logo_ely_png = Url("logo-ely.png");
            public static readonly string logo_trust_png = Url("logo-trust.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class logos {
                private const string URLPATH = "~/Content/images/logos";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ann_png = Url("ann.png");
                public static readonly string armani_png = Url("armani.png");
                public static readonly string blumarine_png = Url("blumarine.png");
                public static readonly string cantarelli_png = Url("cantarelli.png");
                public static readonly string casadei_jpg = Url("casadei.jpg");
                public static readonly string cesare_png = Url("cesare.png");
                public static readonly string commedes_jpg = Url("commedes.jpg");
                public static readonly string costume_jpg = Url("costume.jpg");
                public static readonly string dkny_png = Url("dkny.png");
                public static readonly string dolce_jpg = Url("dolce.jpg");
                public static readonly string dries_png = Url("dries.png");
                public static readonly string emillio_jpg = Url("emillio.jpg");
                public static readonly string etro_jpg = Url("etro.jpg");
                public static readonly string fendi_jpg = Url("fendi.jpg");
                public static readonly string furla_jpg = Url("furla.jpg");
                public static readonly string gf_ferre_jpg = Url("gf-ferre.jpg");
                public static readonly string giuseppe_gif = Url("giuseppe.gif");
                public static readonly string gucci_jpg = Url("gucci.jpg");
                public static readonly string guess_png = Url("guess.png");
                public static readonly string hogan_jpg = Url("hogan.jpg");
                public static readonly string lang_jpg = Url("lang.jpg");
                public static readonly string marella_gif = Url("marella.gif");
                public static readonly string max_png = Url("max.png");
                public static readonly string maxmara_png = Url("maxmara.png");
                public static readonly string missoni_jpeg = Url("missoni.jpeg");
                public static readonly string miu_png = Url("miu.png");
                public static readonly string mm_png = Url("mm.png");
                public static readonly string morch_jpg = Url("morch.jpg");
                public static readonly string parosh_jpg = Url("parosh.jpg");
                public static readonly string paul_gif = Url("paul.gif");
                public static readonly string prada_png = Url("prada.png");
                public static readonly string roberto_png = Url("roberto.png");
                public static readonly string sander_jpg = Url("sander.jpg");
                public static readonly string versace_jpg = Url("versace.jpg");
                public static readonly string westwood_jpg = Url("westwood.jpg");
                public static readonly string yves_jpg = Url("yves.jpg");
            }
        
            public static readonly string map_pic_png = Url("map-pic.png");
            public static readonly string preudomap_pic_1_png = Url("preudomap-pic-1.png");
            public static readonly string preudomap_pic_2_png = Url("preudomap-pic-2.png");
            public static readonly string slider_bottom_1_jpg = Url("slider-bottom-1.jpg");
            public static readonly string slider_bottom_2_jpg = Url("slider-bottom-2.jpg");
            public static readonly string slider_bottom_3_jpg = Url("slider-bottom-3.jpg");
            public static readonly string slider_bottom_4_jpg = Url("slider-bottom-4.jpg");
            public static readonly string slider_new_1_jpg = Url("slider-new-1.jpg");
            public static readonly string slider_new_2_jpg = Url("slider-new-2.jpg");
            public static readonly string slider_new_3_jpg = Url("slider-new-3.jpg");
            public static readonly string slider_new_4_jpg = Url("slider-new-4.jpg");
            public static readonly string sprites_png = Url("sprites.png");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class kendo {
            private const string URLPATH = "~/Content/kendo";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class _2014_1_318 {
                private const string URLPATH = "~/Content/kendo/2014.1.318";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Default {
                    private const string URLPATH = "~/Content/kendo/2014.1.318/Default";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string indeterminate_gif = Url("indeterminate.gif");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                public static readonly string kendo_common_min_css = Url("kendo.common.min.css");
                public static readonly string kendo_default_min_css = Url("kendo.default.min.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class textures {
                    private const string URLPATH = "~/Content/kendo/2014.1.318/textures";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string brushed_metal_png = Url("brushed-metal.png");
                    public static readonly string dots1_png = Url("dots1.png");
                    public static readonly string dots10_png = Url("dots10.png");
                    public static readonly string dots11_png = Url("dots11.png");
                    public static readonly string dots12_png = Url("dots12.png");
                    public static readonly string dots13_png = Url("dots13.png");
                    public static readonly string dots2_png = Url("dots2.png");
                    public static readonly string dots3_png = Url("dots3.png");
                    public static readonly string dots4_png = Url("dots4.png");
                    public static readonly string dots5_png = Url("dots5.png");
                    public static readonly string dots6_png = Url("dots6.png");
                    public static readonly string dots7_png = Url("dots7.png");
                    public static readonly string dots8_png = Url("dots8.png");
                    public static readonly string dots9_png = Url("dots9.png");
                    public static readonly string glass_lighter_png = Url("glass-lighter.png");
                    public static readonly string glass_png = Url("glass.png");
                    public static readonly string highlight_png = Url("highlight.png");
                    public static readonly string hsv_gradient_png = Url("hsv-gradient.png");
                    public static readonly string hue_png = Url("hue.png");
                    public static readonly string leather1_png = Url("leather1.png");
                    public static readonly string leather2_png = Url("leather2.png");
                    public static readonly string noise_png = Url("noise.png");
                    public static readonly string stripe1_png = Url("stripe1.png");
                    public static readonly string stripe2_png = Url("stripe2.png");
                    public static readonly string stripe3_png = Url("stripe3.png");
                    public static readonly string stripe4_png = Url("stripe4.png");
                    public static readonly string stripe5_png = Url("stripe5.png");
                    public static readonly string stripe6_png = Url("stripe6.png");
                    public static readonly string transparency_png = Url("transparency.png");
                    public static readonly string transtexture_png = Url("transtexture.png");
                }
            
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                     
                public static readonly string all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/all.min.css") ? Url("all.min.css") : Url("all.css");
                     
                public static readonly string autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autocomplete.min.css") ? Url("autocomplete.min.css") : Url("autocomplete.css");
                     
                public static readonly string base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/base.min.css") ? Url("base.min.css") : Url("base.css");
                     
                public static readonly string button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.css") ? Url("button.min.css") : Url("button.css");
                     
                public static readonly string core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/core.min.css") ? Url("core.min.css") : Url("core.css");
                     
                public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
                     
                public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                     
                public static readonly string draggable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/draggable.min.css") ? Url("draggable.min.css") : Url("draggable.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                     
                public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                     
                public static readonly string resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/resizable.min.css") ? Url("resizable.min.css") : Url("resizable.css");
                     
                public static readonly string selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectable.min.css") ? Url("selectable.min.css") : Url("selectable.css");
                     
                public static readonly string selectmenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectmenu.min.css") ? Url("selectmenu.min.css") : Url("selectmenu.css");
                     
                public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                     
                public static readonly string sortable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sortable.min.css") ? Url("sortable.min.css") : Url("sortable.css");
                     
                public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                     
                public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                     
                public static readonly string theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.css") ? Url("theme.min.css") : Url("theme.css");
                     
                public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jMetro {
                private const string URLPATH = "~/Content/themes/jMetro";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/jMetro/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_icons_2d89ef_0_png = Url("ui-icons_2d89ef_0.png");
                    public static readonly string ui_icons_525252_0_png = Url("ui-icons_525252_0.png");
                    public static readonly string ui_icons_66B3FF_0_png = Url("ui-icons_66B3FF_0.png");
                    public static readonly string ui_icons_d4d4d4_0_png = Url("ui-icons_d4d4d4_0.png");
                    public static readonly string ui_icons_ffffff_0_png = Url("ui-icons_ffffff_0.png");
                }
            
                public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
                     
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class app 
            {
                public static partial class AirWaybill 
                {
                    public static class Assets
                    {
                        public const string Columns_js = "~/Scripts/app/AirWaybill/Columns.js"; 
                        public const string Files_js = "~/Scripts/app/AirWaybill/Files.js"; 
                        public const string Grid_js = "~/Scripts/app/AirWaybill/Grid.js"; 
                    }
                }
                public static partial class Application 
                {
                    public static class Assets
                    {
                        public const string Columns_js = "~/Scripts/app/Application/Columns.js"; 
                        public const string Files_js = "~/Scripts/app/Application/Files.js"; 
                        public const string Grid_js = "~/Scripts/app/Application/Grid.js"; 
                    }
                }
                public static partial class Calculation 
                {
                    public static partial class Admin 
                    {
                        public static class Assets
                        {
                            public const string Bill_js = "~/Scripts/app/Calculation/Admin/Bill.js"; 
                            public const string Columns_js = "~/Scripts/app/Calculation/Admin/Columns.js"; 
                            public const string DataSource_js = "~/Scripts/app/Calculation/Admin/DataSource.js"; 
                            public const string Grid_js = "~/Scripts/app/Calculation/Admin/Grid.js"; 
                            public const string RegistryOfPaymentsGrid_js = "~/Scripts/app/Calculation/Admin/RegistryOfPaymentsGrid.js"; 
                        }
                    }
                    public static partial class Client 
                    {
                        public static class Assets
                        {
                            public const string Columns_js = "~/Scripts/app/Calculation/Client/Columns.js"; 
                            public const string Grid_js = "~/Scripts/app/Calculation/Client/Grid.js"; 
                        }
                    }
                    public static partial class Sender 
                    {
                        public static class Assets
                        {
                            public const string Columns_js = "~/Scripts/app/Calculation/Sender/Columns.js"; 
                            public const string Grid_js = "~/Scripts/app/Calculation/Sender/Grid.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class City 
                {
                    public static class Assets
                    {
                        public const string Grid_js = "~/Scripts/app/City/Grid.js"; 
                    }
                }
                public static partial class Client 
                {
                    public static class Assets
                    {
                        public const string Grid_js = "~/Scripts/app/Client/Grid.js"; 
                    }
                }
                public static partial class Country 
                {
                    public static class Assets
                    {
                        public const string Grid_js = "~/Scripts/app/Country/Grid.js"; 
                    }
                }
                public static partial class Forwarder 
                {
                    public static partial class Application 
                    {
                        public static class Assets
                        {
                            public const string Columns_js = "~/Scripts/app/Forwarder/Application/Columns.js"; 
                            public const string Grid_js = "~/Scripts/app/Forwarder/Application/Grid.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class State 
                {
                    public static class Assets
                    {
                        public const string Edit_js = "~/Scripts/app/State/Edit.js"; 
                        public const string Grid_js = "~/Scripts/app/State/Grid.js"; 
                    }
                }
                public static partial class Template 
                {
                    public static class Assets
                    {
                        public const string Edit_js = "~/Scripts/app/Template/Edit.js"; 
                        public const string Grid_js = "~/Scripts/app/Template/Grid.js"; 
                    }
                }
                public static partial class User 
                {
                    public static class Assets
                    {
                        public const string Grid_js = "~/Scripts/app/User/Grid.js"; 
                    }
                }
                public static class Assets
                {
                    public const string Alicargo_js = "~/Scripts/app/Alicargo.js"; 
                    public const string Common_js = "~/Scripts/app/Common.js"; 
                    public const string CurrencyType_js = "~/Scripts/app/CurrencyType.js"; 
                    public const string Files_js = "~/Scripts/app/Files.js"; 
                    public const string it_js = "~/Scripts/app/it.js"; 
                    public const string pl_js = "~/Scripts/app/pl.js"; 
                    public const string ru_js = "~/Scripts/app/ru.js"; 
                }
            }
            public static partial class jQuery 
            {
                public static partial class globalize 
                {
                    public static partial class cultures 
                    {
                        public static class Assets
                        {
                            public const string globalize_culture_it_js = "~/Scripts/jQuery/globalize/cultures/globalize.culture.it.js"; 
                            public const string globalize_culture_pl_js = "~/Scripts/jQuery/globalize/cultures/globalize.culture.pl.js"; 
                            public const string globalize_culture_ru_js = "~/Scripts/jQuery/globalize/cultures/globalize.culture.ru.js"; 
                        }
                    }
                    public static class Assets
                    {
                        public const string globalize_js = "~/Scripts/jQuery/globalize/globalize.js"; 
                    }
                }
                public static class Assets
                {
                    public const string jquery_2_1_1_intellisense_js = "~/Scripts/jQuery/jquery-2.1.1.intellisense.js"; 
                    public const string jquery_2_1_1_js = "~/Scripts/jQuery/jquery-2.1.1.js"; 
                    public const string jquery_2_1_1_min_js = "~/Scripts/jQuery/jquery-2.1.1.min.js"; 
                    public const string jquery_ui_1_11_1_js = "~/Scripts/jQuery/jquery-ui-1.11.1.js"; 
                    public const string jquery_ui_min_1_11_1_js = "~/Scripts/jQuery/jquery-ui.min-1.11.1.js"; 
                    public const string jquery_cookie_js = "~/Scripts/jQuery/jquery.cookie.js"; 
                    public const string jquery_signalR_2_1_2_js = "~/Scripts/jQuery/jquery.signalR-2.1.2.js"; 
                    public const string jquery_signalR_2_1_2_min_js = "~/Scripts/jQuery/jquery.signalR-2.1.2.min.js"; 
                    public const string jquery_unobtrusive_ajax_js = "~/Scripts/jQuery/jquery.unobtrusive-ajax.js"; 
                    public const string jquery_unobtrusive_ajax_min_js = "~/Scripts/jQuery/jquery.unobtrusive-ajax.min.js"; 
                    public const string jquery_validate_js = "~/Scripts/jQuery/jquery.validate.js"; 
                    public const string jquery_validate_min_js = "~/Scripts/jQuery/jquery.validate.min.js"; 
                    public const string jquery_validate_unobtrusive_js = "~/Scripts/jQuery/jquery.validate.unobtrusive.js"; 
                    public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jQuery/jquery.validate.unobtrusive.min.js"; 
                }
            }
            public static partial class js 
            {
                public static class Assets
                {
                    public const string imagesloaded_js = "~/Scripts/js/imagesloaded.js"; 
                    public const string isotope_min_js = "~/Scripts/js/isotope.min.js"; 
                    public const string jquery_js = "~/Scripts/js/jquery.js"; 
                    public const string map_js = "~/Scripts/js/map.js"; 
                    public const string modernizr_js = "~/Scripts/js/modernizr.js"; 
                    public const string pushy_min_js = "~/Scripts/js/pushy.min.js"; 
                    public const string script_js = "~/Scripts/js/script.js"; 
                    public const string swiper_min_js = "~/Scripts/js/swiper.min.js"; 
                }
            }
            public static partial class kendo 
            {
                public static partial class _2014_1_318 
                {
                    public static partial class cultures 
                    {
                        public static class Assets
                        {
                            public const string kendo_culture_en_min_js = "~/Scripts/kendo/2014.1.318/cultures/kendo.culture.en.min.js"; 
                            public const string kendo_culture_it_min_js = "~/Scripts/kendo/2014.1.318/cultures/kendo.culture.it.min.js"; 
                            public const string kendo_culture_pl_min_js = "~/Scripts/kendo/2014.1.318/cultures/kendo.culture.pl.min.js"; 
                            public const string kendo_culture_ru_min_js = "~/Scripts/kendo/2014.1.318/cultures/kendo.culture.ru.min.js"; 
                        }
                    }
                    public static class Assets
                    {
                        public const string kendo_web_min_js = "~/Scripts/kendo/2014.1.318/kendo.web.min.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
        public static partial class Content 
        {
            public static partial class app 
            {
                public static class Assets
                {
                    public const string bill_settings_css = "~/Content/app/bill-settings.css";
                    public const string calculation_grid_css = "~/Content/app/calculation-grid.css";
                    public const string common_css = "~/Content/app/common.css";
                    public const string kendo_css = "~/Content/app/kendo.css";
                    public const string layout_css = "~/Content/app/layout.css";
                    public const string payment_css = "~/Content/app/payment.css";
                }
            }
            public static partial class bootstrap 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string bootstrap_responsive_css = "~/Content/bootstrap/css/bootstrap-responsive.css";
                        public const string bootstrap_responsive_min_css = "~/Content/bootstrap/css/bootstrap-responsive.min.css";
                        public const string bootstrap_css = "~/Content/bootstrap/css/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootstrap/css/bootstrap.min.css";
                    }
                }
                public static partial class fileupload 
                {
                    public static class Assets
                    {
                        public const string bootstrap_fileupload_css = "~/Content/bootstrap/fileupload/bootstrap-fileupload.css";
                        public const string bootstrap_fileupload_js = "~/Content/bootstrap/fileupload/bootstrap-fileupload.js"; 
                        public const string bootstrap_fileupload_min_css = "~/Content/bootstrap/fileupload/bootstrap-fileupload.min.css";
                        public const string bootstrap_fileupload_min_js = "~/Content/bootstrap/fileupload/bootstrap-fileupload.min.js"; 
                    }
                }
                public static partial class img 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class js 
                {
                    public static class Assets
                    {
                        public const string bootstrap_js = "~/Content/bootstrap/js/bootstrap.js"; 
                        public const string bootstrap_min_js = "~/Content/bootstrap/js/bootstrap.min.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class css 
            {
                public static class Assets
                {
                    public const string app_css = "~/Content/css/app.css";
                    public const string pushy_css = "~/Content/css/pushy.css";
                    public const string swiper_css = "~/Content/css/swiper.css";
                }
            }
            public static partial class fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class images 
            {
                public static partial class logos 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class kendo 
            {
                public static partial class _2014_1_318 
                {
                    public static partial class Default 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class textures 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string kendo_common_min_css = "~/Content/kendo/2014.1.318/kendo.common.min.css";
                        public const string kendo_default_min_css = "~/Content/kendo/2014.1.318/kendo.default.min.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class themes 
            {
                public static partial class @base 
                {
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string accordion_css = "~/Content/themes/base/accordion.css";
                        public const string all_css = "~/Content/themes/base/all.css";
                        public const string autocomplete_css = "~/Content/themes/base/autocomplete.css";
                        public const string base_css = "~/Content/themes/base/base.css";
                        public const string button_css = "~/Content/themes/base/button.css";
                        public const string core_css = "~/Content/themes/base/core.css";
                        public const string datepicker_css = "~/Content/themes/base/datepicker.css";
                        public const string dialog_css = "~/Content/themes/base/dialog.css";
                        public const string draggable_css = "~/Content/themes/base/draggable.css";
                        public const string menu_css = "~/Content/themes/base/menu.css";
                        public const string progressbar_css = "~/Content/themes/base/progressbar.css";
                        public const string resizable_css = "~/Content/themes/base/resizable.css";
                        public const string selectable_css = "~/Content/themes/base/selectable.css";
                        public const string selectmenu_css = "~/Content/themes/base/selectmenu.css";
                        public const string slider_css = "~/Content/themes/base/slider.css";
                        public const string sortable_css = "~/Content/themes/base/sortable.css";
                        public const string spinner_css = "~/Content/themes/base/spinner.css";
                        public const string tabs_css = "~/Content/themes/base/tabs.css";
                        public const string theme_css = "~/Content/themes/base/theme.css";
                        public const string tooltip_css = "~/Content/themes/base/tooltip.css";
                    }
                }
                public static partial class jMetro 
                {
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string jquery_ui_css = "~/Content/themes/jMetro/jquery-ui.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


