// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Alicargo.Controllers.Awb
{
    public partial class AirWaybillController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AirWaybillController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult List()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.List);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult CargoIsCustomsCleared()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.CargoIsCustomsCleared);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult SetActive()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.SetActive);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.PartialViewResult CargoIsCustomsClearedButton()
        {
            return new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.CargoIsCustomsClearedButton);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult Delete()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetAirWaybill()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetAirWaybill);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AirWaybillController Actions { get { return MVC.AirWaybill; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "AirWaybill";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "AirWaybill";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string List = "List";
            public readonly string CargoIsCustomsCleared = "CargoIsCustomsCleared";
            public readonly string SetActive = "SetActive";
            public readonly string CargoIsCustomsClearedButton = "CargoIsCustomsClearedButton";
            public readonly string Delete = "Delete";
            public readonly string SetAirWaybill = "SetAirWaybill";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string List = "List";
            public const string CargoIsCustomsCleared = "CargoIsCustomsCleared";
            public const string SetActive = "SetActive";
            public const string CargoIsCustomsClearedButton = "CargoIsCustomsClearedButton";
            public const string Delete = "Delete";
            public const string SetAirWaybill = "SetAirWaybill";
        }


        static readonly ActionParamsClass_List s_params_List = new ActionParamsClass_List();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_List ListParams { get { return s_params_List; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_List
        {
            public readonly string take = "take";
            public readonly string skip = "skip";
        }
        static readonly ActionParamsClass_CargoIsCustomsCleared s_params_CargoIsCustomsCleared = new ActionParamsClass_CargoIsCustomsCleared();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CargoIsCustomsCleared CargoIsCustomsClearedParams { get { return s_params_CargoIsCustomsCleared; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CargoIsCustomsCleared
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SetActive s_params_SetActive = new ActionParamsClass_SetActive();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetActive SetActiveParams { get { return s_params_SetActive; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetActive
        {
            public readonly string id = "id";
            public readonly string isActive = "isActive";
        }
        static readonly ActionParamsClass_CargoIsCustomsClearedButton s_params_CargoIsCustomsClearedButton = new ActionParamsClass_CargoIsCustomsClearedButton();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CargoIsCustomsClearedButton CargoIsCustomsClearedButtonParams { get { return s_params_CargoIsCustomsClearedButton; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CargoIsCustomsClearedButton
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SetAirWaybill s_params_SetAirWaybill = new ActionParamsClass_SetAirWaybill();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetAirWaybill SetAirWaybillParams { get { return s_params_SetAirWaybill; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetAirWaybill
        {
            public readonly string applicationId = "applicationId";
            public readonly string airWaybillId = "airWaybillId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AdminDetails = "AdminDetails";
                public readonly string BrokerDetails = "BrokerDetails";
                public readonly string CargoIsCustomsClearedButton = "CargoIsCustomsClearedButton";
                public readonly string Index = "Index";
                public readonly string SenderDetails = "SenderDetails";
            }
            public readonly string AdminDetails = "~/Views/AirWaybill/AdminDetails.cshtml";
            public readonly string BrokerDetails = "~/Views/AirWaybill/BrokerDetails.cshtml";
            public readonly string CargoIsCustomsClearedButton = "~/Views/AirWaybill/CargoIsCustomsClearedButton.cshtml";
            public readonly string Index = "~/Views/AirWaybill/Index.cshtml";
            public readonly string SenderDetails = "~/Views/AirWaybill/SenderDetails.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AirWaybillController : Alicargo.Controllers.Awb.AirWaybillController
    {
        public T4MVC_AirWaybillController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ListOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int take, int skip);

        [NonAction]
        public override System.Web.Mvc.JsonResult List(int take, int skip)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.List);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "take", take);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "skip", skip);
            ListOverride(callInfo, take, skip);
            return callInfo;
        }

        [NonAction]
        partial void CargoIsCustomsClearedOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.HttpStatusCodeResult CargoIsCustomsCleared(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.CargoIsCustomsCleared);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CargoIsCustomsClearedOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SetActiveOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, long id, bool isActive);

        [NonAction]
        public override System.Web.Mvc.HttpStatusCodeResult SetActive(long id, bool isActive)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.SetActive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isActive", isActive);
            SetActiveOverride(callInfo, id, isActive);
            return callInfo;
        }

        [NonAction]
        partial void CargoIsCustomsClearedButtonOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult CargoIsCustomsClearedButton(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.CargoIsCustomsClearedButton);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CargoIsCustomsClearedButtonOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.HttpStatusCodeResult Delete(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SetAirWaybillOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long applicationId, long? airWaybillId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetAirWaybill(long applicationId, long? airWaybillId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetAirWaybill);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "applicationId", applicationId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "airWaybillId", airWaybillId);
            SetAirWaybillOverride(callInfo, applicationId, airWaybillId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
