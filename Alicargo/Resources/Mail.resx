<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Application_Add" xml:space="preserve">
    <value>Создана новая заявка.
Номер заявки: {0}
Клиент: {1}
Производитель: {2}
Марка: {3}
Дата создания:{4}


Created new order.
Number order: {0}
Client: {1}
Factory: {2}
Brands: {3}
Created:{4}</value>
  </data>
  <data name="Application_CPFileAdded" xml:space="preserve">
    <value>Добрый день, {0}
Изменение статуса заявки {1} - прикреплен документ Счет-фактура.
Просьба подписать и выслать почтой по адресу: п/о Домодедово-4 а/я 649 (142004, Московская область, Домодедовский район, г. Домодедово, ул. Корнеева 36.

С уважением,
Alicargo srl


Hello, {0}
Changing the status of the application {1}. Commercial invoice is attached.
Please sign and send by mail to: Post Office Domodedovo-4 PO Box 649 (142004, Moscow region, Domodedovo district, Domodedovo, st. Korneev 36.

Sincerely,
Alicargo srl</value>
  </data>
  <data name="Application_Delete" xml:space="preserve">
    <value>Заявка удалена.</value>
  </data>
  <data name="Application_DeliveryBillFileAdded" xml:space="preserve">
    <value>Изменение статуса заявки: {0}, {1}, {2}, {3}, добавлен счет за доставку

Changing the status of the application: {0}, {1}, {2}, {3}, added due for delivery</value>
  </data>
  <data name="Application_InvoiceFileAdded" xml:space="preserve">
    <value>Изменение статуса заявки: {0}, {1}, {2}, {3}, добавлен инвойс {4}

Changing the status of the application: {0}, {1}, {2}, {3}, added invoice {4}</value>
  </data>
  <data name="Application_PackingFileAdded" xml:space="preserve">
    <value>Изменение статуса заявки: {0}, {1}, {2}, {3}, добавлен пакинг

Changing the status of the application: {0}, {1}, {2}, {3}, added paking</value>
  </data>
  <data name="Application_SetDateOfCargoReceipt" xml:space="preserve">
    <value>Предположительная дата получения — {0}</value>
  </data>
  <data name="Application_SetState" xml:space="preserve">
    <value>Изменение статуса заявки: {34}
Номер заказа: {0}
Предположительная дата получения: {1}
Перевозчик: {2}
Производитель: {3}
Email фабрики: {4}
Телефон фабрики: {5}
Контактное лицо фабрики: {6}
Дней в работе: {7}
Инвойс: {8}
Дата создания: {9}
Дата сметы статуса: {10}
Марка: {11}
Количество мест (коробки): {12}
Объем (m3 ): {13}
Вес (кг): {14}
Характеристика товара: {15}
Стоимость: {16}
Адрес забора груза: {17}
Страна: {18}
Время работы склада: {19}
Условия поставки: {20}
Способ доставки: {21}
Транзитный референс: {33}

Транзит по России:
Город: {22}
Адрес: {23}
Получатель: {24}
Телефон: {25}
Время работы склада: {26}
Способ транзита: {27}
Тип доставки: {28}

AWB: {29}
Дата вылета: {30}
Дата прилета: {31}
Номер ГТД: {32}</value>
  </data>
  <data name="Application_Subject" xml:space="preserve">
    <value>Alicargo: Заявка/Order #{0}</value>
  </data>
  <data name="Application_SwiftFileAdded" xml:space="preserve">
    <value>Изменение статуса заявки: {0}, {1}, {2}, {3}, добавлен swift

Changing the status of the application: {0}, {1}, {2}, {3}, added a swift</value>
  </data>
  <data name="Application_Torg12FileAdded" xml:space="preserve">
    <value>Добрый день, {0}
Изменение статуса заявки {1} - прикреплен документ ТОРГ-12.
Просьба подписать и выслать почтой по адресу: п/о Домодедово-4 а/я 649 (142004, Московская область, Домодедовский район, г. Домодедово, ул. Корнеева 36.

С уважением,
Alicargo srl


Hello, {0}
Changing the status of the application {1}. TORG-12 is attached.
Please sign and send by mail to: Post Office Domodedovo-4 PO Box 649 (142004, Moscow region, Domodedovo district, Domodedovo, st. Korneev 36.

Sincerely,
Alicargo srl</value>
  </data>
  <data name="Application_Update" xml:space="preserve">
    <value>Заявка обновлена.</value>
  </data>
  <data name="Awb_AWBFileAdd" xml:space="preserve">
    <value>Изменение статуса  AWB: Номер авиа-накладной {0}, добавлена авиа-накладная

Changing the status of AWB: air waybill number {0}, added air waybill</value>
  </data>
  <data name="Awb_Create" xml:space="preserve">
    <value>Создана авианакладная, Аэропорт вылета: {0}/{1}, Аэропорт прилета: {2}/{3}, Вес: {4}, Количество мест: {5}. Номер накладной: {6}</value>
  </data>
  <data name="Awb_GTDAdditionalFileAdd" xml:space="preserve">
    <value>Изменение статуса  AWB: Номер авиа-накладной {0}, «добавлен ГТД-дополнение»

Changing the status of AWB: air waybill number {0}, "added the GTD-complement"</value>
  </data>
  <data name="Awb_GTDFileAdd" xml:space="preserve">
    <value>Изменение статуса  AWB: Номер авиа-накладной {0}, «добавлен ГТД»

Changing the status of AWB: air waybill number {0}, "added GTD"</value>
  </data>
  <data name="Awb_InvoiceFileAdd" xml:space="preserve">
    <value>Изменение статуса  AWB: Номер авиа-накладной {0}, «добавлен инвойс»

Changing the status of AWB: air waybill number {0}, "added invoice"</value>
  </data>
  <data name="Awb_PackingFileAdd" xml:space="preserve">
    <value>Изменение статуса  AWB: Номер авиа-накладной {0}, «добавлен пакинг-лист»

Changing the status of AWB: air waybill number {0}, "added paking-list"</value>
  </data>
  <data name="Awb_Set" xml:space="preserve">
    <value>Заявке {7} задана авианакладная, Аэропорт вылета: {0}/{1}, Аэропорт прилета: {2}/{3}, Вес: {4}, Количество мест: {5}. Номер накладной: {6}</value>
  </data>
  <data name="Calculation_Body" xml:space="preserve">
    <value>{0}
{1} - {2} {3} kg * {4} € = {5} €
скотч - {6}
страховка - {7}
фактура - {8}
Итого - {9} €</value>
    <comment>0  - AWB display
1 - app display
2 - mark
3 - weight
4 - tarif per kg
5 - 4 * 5
6 - scoth
7 - insurance
8 - facture
9 - total</comment>
  </data>
  <data name="Calculation_Subject" xml:space="preserve">
    <value>Расчет стоимости заявки {0}</value>
  </data>
  <data name="Client_Add" xml:space="preserve">
    <value>Добрый день, {0}! Вы зарегистрированны в системе отслеживания грузов компании  Alicargo. Имя доступа: {1}, Пароль: {2}.</value>
  </data>
  <data name="Default_Subject" xml:space="preserve">
    <value>Alicargo</value>
  </data>
</root>