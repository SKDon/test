// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Alicargo.Controllers
{
    public partial class ApplicationUpdateController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ApplicationUpdateController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult Close()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.Close);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult SetState()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.SetState);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult States()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.States);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult SetTransitReference()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.SetTransitReference);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.HttpStatusCodeResult SetDateOfCargoReceipt()
        {
            return new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.SetDateOfCargoReceipt);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ApplicationUpdateController Actions { get { return MVC.ApplicationUpdate; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "ApplicationUpdate";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "ApplicationUpdate";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Close = "Close";
            public readonly string SetState = "SetState";
            public readonly string States = "States";
            public readonly string SetTransitReference = "SetTransitReference";
            public readonly string SetDateOfCargoReceipt = "SetDateOfCargoReceipt";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Close = "Close";
            public const string SetState = "SetState";
            public const string States = "States";
            public const string SetTransitReference = "SetTransitReference";
            public const string SetDateOfCargoReceipt = "SetDateOfCargoReceipt";
        }


        static readonly ActionParamsClass_Close s_params_Close = new ActionParamsClass_Close();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Close CloseParams { get { return s_params_Close; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Close
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SetState s_params_SetState = new ActionParamsClass_SetState();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetState SetStateParams { get { return s_params_SetState; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetState
        {
            public readonly string id = "id";
            public readonly string stateId = "stateId";
        }
        static readonly ActionParamsClass_States s_params_States = new ActionParamsClass_States();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_States StatesParams { get { return s_params_States; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_States
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SetTransitReference s_params_SetTransitReference = new ActionParamsClass_SetTransitReference();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetTransitReference SetTransitReferenceParams { get { return s_params_SetTransitReference; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetTransitReference
        {
            public readonly string id = "id";
            public readonly string TransitReference = "TransitReference";
        }
        static readonly ActionParamsClass_SetDateOfCargoReceipt s_params_SetDateOfCargoReceipt = new ActionParamsClass_SetDateOfCargoReceipt();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetDateOfCargoReceipt SetDateOfCargoReceiptParams { get { return s_params_SetDateOfCargoReceipt; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetDateOfCargoReceipt
        {
            public readonly string id = "id";
            public readonly string dateOfCargoReceipt = "dateOfCargoReceipt";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ApplicationUpdateController : Alicargo.Controllers.ApplicationUpdateController
    {
        public T4MVC_ApplicationUpdateController() : base(Dummy.Instance) { }

        partial void CloseOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, long id);

        public override System.Web.Mvc.HttpStatusCodeResult Close(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.Close);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CloseOverride(callInfo, id);
            return callInfo;
        }

        partial void SetStateOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, long id, long stateId);

        public override System.Web.Mvc.HttpStatusCodeResult SetState(long id, long stateId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.SetState);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "stateId", stateId);
            SetStateOverride(callInfo, id, stateId);
            return callInfo;
        }

        partial void StatesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, long id);

        public override System.Web.Mvc.JsonResult States(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.States);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            StatesOverride(callInfo, id);
            return callInfo;
        }

        partial void SetTransitReferenceOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, long id, string TransitReference);

        public override System.Web.Mvc.HttpStatusCodeResult SetTransitReference(long id, string TransitReference)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.SetTransitReference);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "TransitReference", TransitReference);
            SetTransitReferenceOverride(callInfo, id, TransitReference);
            return callInfo;
        }

        partial void SetDateOfCargoReceiptOverride(T4MVC_System_Web_Mvc_HttpStatusCodeResult callInfo, long id, System.DateTimeOffset? dateOfCargoReceipt);

        public override System.Web.Mvc.HttpStatusCodeResult SetDateOfCargoReceipt(long id, System.DateTimeOffset? dateOfCargoReceipt)
        {
            var callInfo = new T4MVC_System_Web_Mvc_HttpStatusCodeResult(Area, Name, ActionNames.SetDateOfCargoReceipt);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateOfCargoReceipt", dateOfCargoReceipt);
            SetDateOfCargoReceiptOverride(callInfo, id, dateOfCargoReceipt);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
